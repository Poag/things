# Sonarr, Radarr, Lidarr, Bazarr, and Jackett
# You will need to install cifs on your docker machine if you plan to mount Windows network shares as folders on your Ubuntu docker system. See Scripts/shell_scripts/updateubuntu.sh
# Change "<dns-hostname>" to your docker swarm node that has your network share volumes mounted. Unfortunately SQLite cannot run over smb or nfs without running into issues.
# Change /path/on/host in each service's volumes section to match your setup.
# Created by github.com/alexandzors 01-08-2019
# Copy this file into a dir and run "docker stack deploy -c media_docker-compose.yml media"
version: '3'
services:
  sonarr:
    deploy:
      placement:
        constraints:
          - node.hostname == <dns-hostname>
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 240s
    image: linuxserver/sonarr
    ports:
      - "8989:8989"
    environment:
      PUID: "1000"
      PGID: "1000"
    volumes:
      - /path/on/host:/tv
      - /dev/rtc:/dev/rtc:ro
      - /path/on/host:/config
      - /path/on/host:/downloads
    depends_on:
      - jackett
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://<ipofservice>:8989 || exit 1"]
      interval: 5m
      timeout: 10s
      retries: 3    
  radarr:
    deploy:
      placement:
        constraints:
          - node.hostname == <dns-hostname>
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 240s
    image: linuxserver/radarr
    ports:
      - "7878:7878"
    environment:
      PUID: "1001"
      PGID: "1001"
      TZ: "America/New_York"
    volumes:
      - /path/on/host:/downloads
      - /path/on/host:/config
      - /path/on/host:/movies
    depends_on:
      - jackett
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://<ipofservice>:7878 || exit 1"]
      interval: 5m
      timeout: 10s
      retries: 3    
  jackett:
    deploy:
      placement:
        constraints:
          - node.hostname == <dns-hostname>
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 240s
    image: linuxserver/jackett
    ports:
      - "9117:9117"
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "America/New_York"
    volumes:
      - /path/on/host:/config
      - /path/on/host:/downloads
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://<ipofservice>:9117 || exit 1"]
      interval: 5m
      timeout: 10s
      retries: 3    
  bazarr:
    deploy:
      placement:
        constraints:
          - node.hostname == <dns-hostname>
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 240s
    image: linuxserver/bazarr
    ports:
      - "6767:6767"
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "America/New_York"
    volumes:
      - /path/on/host:/config
      - /path/on/host:/tv
      - /path/on/host:/movies
    depends_on:
      - sonarr
      - radarr
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://<ipofservice>:6767 || exit 1"]
      interval: 5m
      timeout: 10s
      retries: 3    
  lidarr:
    deploy:
      placement:
        constraints:
          - node.hostname == <dns-hostname>
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 240s
    image: linuxserver/lidarr
    ports:
      - "8686:8686"
    environment:
      PUID: "1000"
      PGID: "1000"
    volumes:
      - /path/on/host:/config
      - /path/on/host:/downloads
      - /path/on/host:/music
    depends_on:
      - jackett
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://<ipofservice>:8686 || exit 1"]
      interval: 5m
      timeout: 10s
      retries: 3    